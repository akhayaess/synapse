{
	"name": "pl_refresh_silver_views",
	"properties": {
		"activities": [
			{
				"name": "ACT GEN Lookup Get silver objects",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Log run start for views",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_get_bronze_to_silver_objects]",
						"storedProcedureParameters": {
							"execution_id": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"schedule_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.schedule_name",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_asql_tables",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ACT IC ForEach Process silver obj",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ACT GEN Lookup Get silver objects",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get KV storage account",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('ACT GEN Lookup Get silver objects').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "act_gen_scpt_create_silver_views",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "asa-dc-WorkspaceDefaultSqlServer",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('\n\tIF NOT EXISTS (SELECT * FROM sys.symmetric_keys WHERE name LIKE ''%DatabaseMasterKey%'')\n\t\tCREATE MASTER KEY ENCRYPTION BY PASSWORD = ''2023.PtEncrpPass''\n')",
											"type": "Expression"
										}
									},
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('\n    IF NOT EXISTS (SELECT * FROM sys.database_scoped_credentials WHERE name = ''adls_credential_msi'')\n\t    CREATE DATABASE SCOPED CREDENTIAL adls_credential_msi\n\t\t    WITH IDENTITY = ''MANAGED IDENTITY''\n')",
											"type": "Expression"
										}
									},
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('\n    IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = ''adls_',item().target_container,'_data_source'')\n\t    CREATE EXTERNAL DATA SOURCE [adls_',item().target_container,'_data_source] \n\t    WITH (\n\t\t    LOCATION = ''abfss://',item().target_container,'@',activity('Get KV storage account').output.value,'.dfs.core.windows.net'',\n\t\t    CREDENTIAL = adls_credential_msi \n\t    )\n')",
											"type": "Expression"
										}
									},
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = ''',item().silver_schema,''') \n    EXEC(''CREATE SCHEMA [',item().silver_schema,']'');\n')",
											"type": "Expression"
										}
									},
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('DROP VIEW IF EXISTS ',item().silver_schema,'.',item().target_table,';')",
											"type": "Expression"
										}
									},
									{
										"type": "NonQuery",
										"text": {
											"value": "@concat('\nCREATE VIEW ',item().silver_schema,'.',item().target_table,' AS \n    SELECT \n        * \n    FROM OPENROWSET (\n        BULK ''',item().target_folder,'/',item().target_table,'/'',\n        DATA_SOURCE = ''adls_',item().target_container,'_data_source'',\n        FORMAT = ''',item().target_table_format,'''\n    ) tbl\n')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Insert reconcilation record silver views failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_gen_scpt_create_silver_views",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_insert_reconcilation_log]",
								"storedProcedureParameters": {
									"container_name": {
										"value": {
											"value": "@item().target_container",
											"type": "Expression"
										},
										"type": "String"
									},
									"execution_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"execution_time": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"file_name": {
										"value": {
											"value": "@item().target_table",
											"type": "Expression"
										},
										"type": "String"
									},
									"folder_name": {
										"value": {
											"value": "@item().target_folder",
											"type": "Expression"
										},
										"type": "String"
									},
									"is_processed": {
										"value": "false",
										"type": "Boolean"
									},
									"object_name": {
										"value": {
											"value": "@item().target_table",
											"type": "Expression"
										},
										"type": "String"
									},
									"rows_copied": {
										"value": "0",
										"type": "Int32"
									},
									"rows_read": {
										"value": "0",
										"type": "Int32"
									},
									"schedule_name": {
										"value": {
											"value": "@pipeline().parameters.schedule_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"sql_stmt": {
										"value": "N/A",
										"type": "String"
									},
									"duration": {
										"value": "0",
										"type": "Int32"
									},
									"error_message": {
										"value": {
											"value": "@activity('act_gen_scpt_create_silver_views').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"rows_deleted": {
										"value": null,
										"type": "Int32"
									},
									"object_id": {
										"value": {
											"value": "@item().target_table_id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"database_name": {
										"value": {
											"value": "@item().source_name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_azsql_metadata",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Log lookup error",
				"description": "Log lookup error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ACT GEN Lookup Get silver objects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-lookup-error",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": true,
						"error_message": {
							"value": "@concat(activity('ACT GEN Lookup Get silver objects').Error.message,'failed for:',pipeline().parameters.schedule_name)",
							"type": "Expression"
						},
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log run end for each",
				"description": "Log run end",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ACT IC ForEach Process silver obj",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-end",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": false,
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log process error by foreach failed",
				"description": "Log process error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ACT IC ForEach Process silver obj",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-foreach-error",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": true,
						"error_message": "Activity failed because an inner activity failed",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log run end by lookup error",
				"description": "Log run end",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ACT GEN Lookup Get silver objects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-end",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": true,
						"error_message": "Pipeline failed because a lookup failed",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Alert on error in lookup",
				"description": "Alert on error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Log lookup error",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "Log run end by lookup error",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_alert_on_error",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"send_alert_to": "leonardo.tizon@maersk.com",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						},
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Alert on error in foreach",
				"description": "Alert on error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Log process error by foreach failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_alert_on_error",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"send_alert_to": "leonardo.tizon@maersk.com",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						},
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log run start for views",
				"description": "Log run start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-start",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": false,
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get Key Vault",
				"description": "Get Key Vault",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_get_global_parameter_value]",
						"storedProcedureParameters": {
							"gl_parameter_name": {
								"type": "String",
								"value": {
									"value": "@concat('key-vault-url', if(contains(pipeline().DataFactory,'-cdt-'), '-cdt', if(contains(pipeline().DataFactory,'-tst-'), '-tst', '-prd')))",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azsql_metadata2",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set storage account secret",
				"description": "Set storage account secret",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "storage-account-secret",
					"value": "wnd-namcl-storage-name"
				}
			},
			{
				"name": "Get KV storage account",
				"description": "Get KV storage account",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set storage account secret",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Key Vault",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:01:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat(activity('Get Key Vault').output.firstRow.gl_parameter_value,variables('storage-account-secret'),'?api-version=',pipeline().parameters.key_vault_api_version)",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"schedule_name": {
				"type": "string"
			},
			"processing_start": {
				"type": "string"
			},
			"key_vault_api_version": {
				"type": "string",
				"defaultValue": "7.4"
			}
		},
		"variables": {
			"storage-account-secret": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Maersk Data Centralization/Data Integration/02. Bronze to Silver"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-21T15:17:43Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}