{
	"name": "pl_extract_sql_to_adls",
	"properties": {
		"description": "This pipeline extracts data from on premise sql databases into adls",
		"activities": [
			{
				"name": "Get object metadata",
				"description": "Get object metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update schedule start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_get_source_to_bronze_objects]",
						"storedProcedureParameters": {
							"execution_id": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"filter_clause": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.filter_clause",
									"type": "Expression"
								}
							},
							"schedule_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.schedule_name",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azsql_metadata2",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Process objects",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get object metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get object metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy SQL to ADLS",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.05:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "source_group",
											"value": {
												"value": "@item().source_group",
												"type": "Expression"
											}
										},
										{
											"name": "source",
											"value": {
												"value": "@item().source_name",
												"type": "Expression"
											}
										},
										{
											"name": "source_table",
											"value": {
												"value": "@item().source_table_name",
												"type": "Expression"
											}
										},
										{
											"name": "bronze_file_creation_time",
											"value": {
												"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss.fffffff' )",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@item().source_sql_stmt",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_sql_011",
									"type": "DatasetReference",
									"parameters": {
										"connstr": {
											"value": "@item().source_kv_connstr",
											"type": "Expression"
										},
										"connuser": {
											"value": "@item().source_connuser",
											"type": "Expression"
										},
										"connpw": {
											"value": "@item().source_kv_connpw",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet2",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@item().target_container_name",
											"type": "Expression"
										},
										"folder": "@item().target_folder_name",
										"file": {
											"value": "@item().target_full_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy SQL to ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_update_watermark]",
								"storedProcedureParameters": {
									"new_watermark_value": {
										"value": {
											"value": "@item().to_watermark_value",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"object_id": {
										"value": {
											"value": "@item().source_table_id",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_azsql_metadata",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log copy error",
							"description": "Log copy error",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Copy SQL to ADLS",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_common_logging",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"execution_id": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"object_type": "table",
									"object_name": {
										"value": "@item().source_table_name",
										"type": "Expression"
									},
									"event": "pipeline-copy-error",
									"execution_time": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"error_flag": true,
									"error_message": {
										"value": "@activity('Copy SQL to ADLS').output.errors[0].Message",
										"type": "Expression"
									},
									"schedule_name": {
										"value": "@pipeline().parameters.schedule_name",
										"type": "Expression"
									},
									"sql_stmt": {
										"value": "@item().source_sql_stmt",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Insert reconcilation record",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy SQL to ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_insert_reconcilation_log]",
								"storedProcedureParameters": {
									"container_name": {
										"value": {
											"value": "@item().target_container_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"execution_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"execution_time": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"file_name": {
										"value": {
											"value": "@item().target_full_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"folder_name": {
										"value": {
											"value": "@item().target_folder_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"is_processed": {
										"value": "false",
										"type": "Boolean"
									},
									"object_name": {
										"value": {
											"value": "@item().target_file_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"rows_copied": {
										"value": {
											"value": "@activity('Copy SQL to ADLS').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"rows_read": {
										"value": {
											"value": "@activity('Copy SQL to ADLS').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"schedule_name": {
										"value": {
											"value": "@pipeline().parameters.schedule_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"sql_stmt": {
										"value": {
											"value": "@item().source_sql_stmt",
											"type": "Expression"
										},
										"type": "String"
									},
									"duration": {
										"value": {
											"value": "@activity('Copy SQL to ADLS').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"error_message": {
										"value": null,
										"type": "String"
									},
									"rows_deleted": {
										"value": "0",
										"type": "Int32"
									},
									"object_id": {
										"value": {
											"value": "@item().source_table_id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"database_name": {
										"value": {
											"value": "@item().source_database",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_azsql_metadata",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Log run start",
				"description": "Log run start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-start",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": false,
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log lookup error",
				"description": "Log lookup error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Get object metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-lookup-error",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": true,
						"error_message": {
							"value": "Activity 'Get object metadata' failed for schedule_name\n",
							"type": "Expression"
						},
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log run end",
				"description": "Log run end",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Process objects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-end",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": false,
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set processing_start",
				"description": "Set processing_start",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Log run start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "processing_start",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Update schedule start",
				"description": "Flag schedule as \"in processing\"",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log run start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_update_schedule_exec]",
					"storedProcedureParameters": {
						"end_execution_time": {
							"value": null,
							"type": "DateTime"
						},
						"error_flag": {
							"value": null,
							"type": "Boolean"
						},
						"event": {
							"value": "start",
							"type": "String"
						},
						"execution_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"schedule_name": {
							"value": {
								"value": "@pipeline().parameters.schedule_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"start_execution_time": {
							"value": null,
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azsql_metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update schedule end kp error",
				"description": "Flag schedule as \"not processing\"",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get object metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_update_schedule_exec]",
					"storedProcedureParameters": {
						"end_execution_time": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"error_flag": {
							"value": "true",
							"type": "Boolean"
						},
						"event": {
							"value": "end",
							"type": "String"
						},
						"execution_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"schedule_name": {
							"value": {
								"value": "@pipeline().parameters.schedule_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"start_execution_time": {
							"value": {
								"value": "@variables('processing_start')",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azsql_metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update schedule end",
				"description": "Update schedule end",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Process objects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_update_schedule_exec]",
					"storedProcedureParameters": {
						"end_execution_time": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"error_flag": {
							"value": "false",
							"type": "Boolean"
						},
						"event": {
							"value": "end",
							"type": "String"
						},
						"execution_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"schedule_name": {
							"value": {
								"value": "@pipeline().parameters.schedule_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"start_execution_time": {
							"value": {
								"value": "@variables('processing_start')",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azsql_metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log process error",
				"description": "Log process error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Process objects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"object_type": "pipeline",
						"object_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"event": "pipeline-foreach-error",
						"execution_time": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"error_flag": true,
						"error_message": "Activity failed because an inner activity failed",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Update schedule end process error",
				"description": "Flag schedule as \"not processing\"",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Process objects",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_update_schedule_exec]",
					"storedProcedureParameters": {
						"end_execution_time": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"error_flag": {
							"value": "true",
							"type": "Boolean"
						},
						"event": {
							"value": "end",
							"type": "String"
						},
						"execution_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"schedule_name": {
							"value": {
								"value": "@pipeline().parameters.schedule_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"start_execution_time": {
							"value": {
								"value": "@variables('processing_start')",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azsql_metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Alert on error in usp",
				"description": "Alert on error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Update schedule start",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_alert_on_error",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"send_alert_to": "leonardo.tizon@maersk.com",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						},
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Alert on error in lookup",
				"description": "Alert on error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Update schedule end kp error",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "Log lookup error",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_alert_on_error",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"send_alert_to": "leonardo.tizon@maersk.com",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						},
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Alert on error in foreach",
				"description": "Alert on error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Update schedule end process error",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "Log process error",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_common_alert_on_error",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"send_alert_to": "leonardo.tizon@maersk.com",
						"schedule_name": {
							"value": "@pipeline().parameters.schedule_name",
							"type": "Expression"
						},
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"execution_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"source_name": {
				"type": "string",
				"defaultValue": "batch"
			},
			"schedule_name": {
				"type": "string",
				"defaultValue": "daily-source-to-bronze-webec-batch"
			},
			"filter_clause": {
				"type": "string"
			}
		},
		"variables": {
			"processing_start": {
				"type": "String"
			},
			"processing_end": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Maersk Data Centralization/Data Integration/01. Source to Bronze"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-21T15:17:27Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}