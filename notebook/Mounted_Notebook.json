{
	"name": "Mounted_Notebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "ecbf6fc0-3ae1-4cb6-8b00-5de72c34028d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/0328350c-f7d1-4ca4-8da5-485b8f684719/resourceGroups/RG_DA_1/providers/Microsoft.Synapse/workspaces/asa-rg-da-1/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://asa-rg-da-1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"def container_mount_point(cointainer,x,adls_gen2_name,mount_name):\r\n",
					"    try:\r\n",
					"        mount_name='/'+mount_name\r\n",
					"        mssparkutils.fs.mount(\r\n",
					"        f\"abfss://{cointainer}@{adls_gen2_name}.dfs.core.windows.net\",\r\n",
					"        mount_name,\r\n",
					"        {'linkedService':x})\r\n",
					"        jobId=mssparkutils.env.getJobId()\r\n",
					"        return 'created mount -  synfs:/'+jobId+mount_name\r\n",
					"    except Exception as e:\r\n",
					"        return 'already exist in' + mount_name\r\n",
					"\r\n",
					"\r\n",
					"    \r\n",
					""
				]
			}
		]
	}
}