{
	"name": "print_Hi",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "434bab41-0a3b-4327-b50a-64c0a6df0d75"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/0328350c-f7d1-4ca4-8da5-485b8f684719/resourceGroups/RG_DA_1/providers/Microsoft.Synapse/workspaces/asa-rg-da-1/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://asa-rg-da-1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"print(\"hi\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"mssparkutils.fs.mount(\r\n",
					"    'abfss://sales@hotandcoldstorage.dfs.core.windows.net',\r\n",
					"    '/sales',\r\n",
					"    {'accountKey':'5S+k7VLHax9TSLyoLXAAKhRM8uP226DH+z8KIEK7wy+kdREspez7os15QUIruOgNSav0+OM+BOhy+ASt4K1hrA=='}\r\n",
					")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"mssparkutils.fs.mount(\r\n",
					"    'abfss://sales@hotandcoldstorage.dfs.core.windows.net',\r\n",
					"    '/sales1',\r\n",
					"    {'linkedService':'Azb'}\r\n",
					")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"jobId=mssparkutils.env.getJobId()\r\n",
					"print(jobId)\r\n",
					"spark = SparkSession.builder \\\r\n",
					"                        .appName(\"ReadParquet\") \\\r\n",
					"                        .getOrCreate()\r\n",
					"df=spark.read.load('synfs:/'+jobId+'/sales/*2025*/*.parquet')\r\n",
					"# df.show()\r\n",
					"df.count()\r\n",
					"# df.write.format(\"parquet\").save(\"synfs:/\"+jobId+\"/sales/qqq1\")\r\n",
					""
				],
				"execution_count": 6
			}
		]
	}
}